/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import BD.TablaClientes;
import BD.conexionbd;
import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import modelo.Cliente;
import proyecto.pkg11.ivan.main;

/**
 *
 * @author iv
 */
public class VentanaClientes extends javax.swing.JFrame {
        private static int cod;
    /**
     * Creates new form VentanaClientes
     */
    public VentanaClientes() {
        initComponents();
            this.setLocationRelativeTo(null);
            codclie.setText(String.valueOf(generarcod()));
            salida.setVisible(false);
            existe.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        pinsertar = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        codclie = new javax.swing.JTextField();
        dni = new javax.swing.JTextField();
        nombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        batras = new javax.swing.JButton();
        binsertar = new javax.swing.JButton();
        bvalidar = new javax.swing.JButton();
        salida = new javax.swing.JLabel();
        existe = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pinsertar.setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setText("COD:");

        codclie.setEditable(false);
        codclie.setEnabled(false);
        codclie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codclieActionPerformed(evt);
            }
        });

        dni.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dniFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                dniFocusLost(evt);
            }
        });
        dni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dniActionPerformed(evt);
            }
        });

        nombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nombreFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nombreFocusLost(evt);
            }
        });
        nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreActionPerformed(evt);
            }
        });

        jLabel2.setText("DNI:");

        jLabel3.setText("Nombre:");

        batras.setText("atras");
        batras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batrasActionPerformed(evt);
            }
        });

        binsertar.setText("insertar");
        binsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                binsertarActionPerformed(evt);
            }
        });

        bvalidar.setText("validar");
        bvalidar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bvalidarActionPerformed(evt);
            }
        });

        salida.setBackground(new java.awt.Color(0, 102, 51));
        salida.setForeground(new java.awt.Color(0, 153, 0));
        salida.setText("El cliente es valido");

        existe.setForeground(java.awt.Color.red);
        existe.setText("Error ya existe el cliente");

        javax.swing.GroupLayout pinsertarLayout = new javax.swing.GroupLayout(pinsertar);
        pinsertar.setLayout(pinsertarLayout);
        pinsertarLayout.setHorizontalGroup(
            pinsertarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pinsertarLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(pinsertarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(27, 27, 27)
                .addGroup(pinsertarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(codclie)
                    .addComponent(dni)
                    .addComponent(nombre, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pinsertarLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(batras)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                .addGroup(pinsertarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pinsertarLayout.createSequentialGroup()
                        .addComponent(existe)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(salida))
                    .addGroup(pinsertarLayout.createSequentialGroup()
                        .addComponent(bvalidar)
                        .addGap(18, 18, 18)
                        .addComponent(binsertar)))
                .addContainerGap())
        );
        pinsertarLayout.setVerticalGroup(
            pinsertarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pinsertarLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(pinsertarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(codclie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(pinsertarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(pinsertarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pinsertarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salida, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(existe))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pinsertarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(batras)
                    .addComponent(binsertar)
                    .addComponent(bvalidar))
                .addGap(114, 114, 114))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pinsertar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pinsertar, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void codclieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codclieActionPerformed
       
        codclie.setText(String.valueOf(generarcod()));
        
    }//GEN-LAST:event_codclieActionPerformed

    private void dniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dniActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dniActionPerformed

    private void nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreActionPerformed

    private void dniFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dniFocusGained
       dni.setText("");
        dni.setBackground(Color.white);
        dni.setForeground(Color.BLACK);
    }//GEN-LAST:event_dniFocusGained

    private void dniFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dniFocusLost
        if ((dnivalido()==true))
        { 
          dni.setForeground(Color.green);
        } else {
           dni.setText("");
           dni.setBackground(Color.orange);
            }
        
    }//GEN-LAST:event_dniFocusLost

    private void nombreFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nombreFocusGained
        // TODO add your handling code here:
         nombre.setText("");
         nombre.setBackground(Color.white);
    }//GEN-LAST:event_nombreFocusGained

    private void nombreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nombreFocusLost
        // TODO add your handling code here:
        
         if ((nombrevalido()==true))
        { 
          nombre.setForeground(Color.green);
        } else {
           nombre.setText("");
           nombre.setBackground(Color.orange);
            }
        
        
    }//GEN-LAST:event_nombreFocusLost

    private void batrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batrasActionPerformed
        // TODO add your handling code here:
        
        main.Vprincipal();
    }//GEN-LAST:event_batrasActionPerformed

    private void bvalidarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bvalidarActionPerformed
        
        try{
         
         Cliente o =  main.buscarDni(dni.getText());
         
            if(o==null){
             salida.setVisible(true);
             existe.setVisible(false);
            }else{
          existe.setVisible(true);
           salida.setVisible(false);
         dni.setForeground(Color.red);}
         
        }catch(Exception e)
        {
           
        }
    }//GEN-LAST:event_bvalidarActionPerformed

    private void binsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_binsertarActionPerformed
        // TODO add your handling code here:
        Cliente c = new Cliente(Integer.parseInt(codclie.getText()),dni.getText(),nombre.getText());
            try {
                main.ingresarcliente(c);
            } catch (Exception ex) {
                Logger.getLogger(VentanaClientes.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_binsertarActionPerformed

    private boolean dnivalido(){
        String dni1 = dni.getText();
        Pattern dnis = Pattern.compile("^[0-9]{8}[QWRTYPSDFGHJKLÑZXCVBNM]$");
        Matcher mdni= dnis.matcher(dni1);
        if(mdni.matches()){
            return true;
        }
        else{
            return false;
        }
    
        
    
    }
    
    private Cliente pasarCliente(Cliente c){
         return  c;
        }
    
    
    
    
        private boolean nombrevalido(){
        String nombre1 = nombre.getText();
        Pattern nombres = Pattern.compile("^([A-Za-z]+)");
        Matcher mnombre= nombres.matcher(nombre1);
        if(mnombre.matches()){
            return true;
        }
        else{
            return false;
        }
    
    
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaClientes().setVisible(true);
            }
        });
    }
    
  
    
    public int generarcod(){
    cod = (int) (Math.random()*11111+9999);
      return cod;}
    
    public void VisibleInsertar(){
    pinsertar.setVisible(true);
   

    
    }
    
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton batras;
    private javax.swing.JButton binsertar;
    private javax.swing.JButton bvalidar;
    private javax.swing.JTextField codclie;
    private javax.swing.JTextField dni;
    private javax.swing.JLabel existe;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JTextField nombre;
    private javax.swing.JPanel pinsertar;
    private javax.swing.JLabel salida;
    // End of variables declaration//GEN-END:variables
    private  TablaClientes tc;
    private  conexionbd bd;
}
